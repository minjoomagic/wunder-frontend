{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Main/Main.js\";\nimport React from \"react\"; // import ItemContainer from \"./ItemContainer\";\n\nimport { Route, Switch } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\nimport MainMenu from \"./MainMenu\";\nimport ItemContainer from \"../ItemContainer/ItemContainer\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      user: null\n    };\n\n    this.fetchItems = () => {\n      console.log(\"items Fetch starting\");\n      fetch(\"http://localhost:3000/items\").then(res => res.json()).then(items => {\n        this.setState({\n          items: items\n        }, console.log(\"these are my items\", items));\n      });\n    };\n\n    this.filterHandler = () => {\n      if (this.state.searchTerm && this.state.selection) {\n        let searchResults = this.nameSearchFilter(this.state.searchTerm);\n        return this.doubleSearchFilter(searchResults, this.state.selection);\n      } else if (this.state.selection) {\n        return this.categorySelectionFilter(this.state.selection);\n      } else if (this.state.searchTerm) {\n        return this.nameSearchFilter(this.state.searchTerm);\n      } else {\n        return this.state.items;\n      }\n    };\n\n    this.nameSearchFilter = input => {\n      return this.state.items.filter(item => {\n        return item.name.toLowerCase().includes(input.toLowerCase());\n      });\n    };\n\n    this.categorySelectionFilter = input => {\n      if (input.toLowerCase() !== \"all\") {\n        return this.state.items.filter(item => {\n          return item.category.toLowerCase().includes(input.toLowerCase());\n        });\n      } else {\n        return this.state.items;\n      }\n    };\n\n    this.doubleSearchFilter = (arrayOfItems, selection) => {\n      return arrayOfItems.filter(item => {\n        return item.category.toLowerCase().includes(selection.toLowerCase());\n      });\n    };\n  }\n\n  // ================= Fetch Data =====================\n  componentDidMount() {\n    console.log(\"Main did mount\");\n    this.setState({\n      user: this.props.user\n    });\n    this.fetchItems(); // this.fetchCategories();\n  } // ----------------- Fetch Items ---------------------\n\n\n  // // ------------- Toggle Sell Form --------------\n  //\n  // toggleForm = () => {\n  //   this.setState({ sellForm: !this.state.sellForm });\n  // };\n  // ------------- Buy Item --------------\n  //\n  // buyHandler = item => {\n  //   console.log(\"buying from main\");\n  //   let user = this.props.user;\n  //\n  //   console.log(\"this is my user:\", user);\n  //   console.log(\"this is my item:\", item);\n  //   console.log(\"this is my item's seller:\", item.users[0]);\n  //\n  //   if (user.username !== item.users[0].username) {\n  //     let config = {\n  //       method: \"PATCH\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       },\n  //       body: JSON.stringify({ user: user, item: item })\n  //     };\n  //     console.log(\"this is my item in main:\", item);\n  //     fetch(`http://localhost:3000/items/${item.id}`, config).then(resp => {\n  //       if (resp.status === 204) {\n  //         this.fetchItems();\n  //         this.props.history.push(\"/items\");\n  //       }\n  //     });\n  //   } else {\n  //     window.alert(\"Can't buy your own items !\");\n  //   }\n  // };\n  render() {\n    // let items = this.filterHandler();\n    // let categories = this.state.categories;\n    let items = this.state.items;\n    console.log(\"this is my user in Main:\", this.props.user); // <NavBar\n    //   logOutHandler={this.props.logOutHandler}\n    //   user={this.props.user}\n    //   toggleFormHandler={this.toggleForm}\n    //   categories={categories}\n    //   createSubmitHandler={this.createSubmitHandler}\n    //   title=\"Caravan\"\n    //   logo=\"truck\"\n    //   color=\"primary\"\n    //   selectHandler={this.selectHandler}\n    //   submitHandler={this.submitHandler}\n    //   />\n    // <ItemContainer buyHandler={this.buyHandler} items={items} />\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(MainMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/items\",\n      render: routerProps => React.createElement(ItemContainer, {\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Main);","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Main/Main.js"],"names":["React","Route","Switch","withRouter","MainMenu","ItemContainer","Main","Component","state","items","user","fetchItems","console","log","fetch","then","res","json","setState","filterHandler","searchTerm","selection","searchResults","nameSearchFilter","doubleSearchFilter","categorySelectionFilter","input","filter","item","name","toLowerCase","includes","category","arrayOfItems","componentDidMount","props","render","routerProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// import ItemContainer from \"./ItemContainer\";\nimport { Route, Switch } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\nimport MainMenu from \"./MainMenu\";\nimport ItemContainer from \"../ItemContainer/ItemContainer\";\n\nclass Main extends React.Component {\n  state = {\n    items: [],\n    user: null\n  };\n\n  // ================= Fetch Data =====================\n  componentDidMount() {\n    console.log(\"Main did mount\");\n    this.setState({ user: this.props.user });\n    this.fetchItems();\n    // this.fetchCategories();\n  }\n\n  // ----------------- Fetch Items ---------------------\n  fetchItems = () => {\n    console.log(\"items Fetch starting\");\n    fetch(\"http://localhost:3000/items\")\n      .then(res => res.json())\n      .then(items => {\n        this.setState(\n          { items: items },\n          console.log(\"these are my items\", items)\n        );\n      });\n  };\n\n  // ---------------- Fetch Categories ---------------------\n  // fetchCategories = () => {\n  //   fetch(\"http://localhost:3000/categories\")\n  //     .then(res => res.json())\n  //     .then(categories => this.setState({ categories: categories }));\n  // };\n\n  //==================== Event Handlers ======================\n  // submitHandler = searchTerm => {\n  //   this.setState({ searchTerm: searchTerm });\n  // };\n  //\n  // selectHandler = selection => {\n  //   this.setState({ selection: selection });\n  // };\n\n  // createSubmitHandler = (item, user) => {\n  //   let url = \"http://localhost:3000/items\";\n  //   let config = {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({ user: user, item: item })\n  //   };\n  //   fetch(url, config)\n  //     .then(res => res.json())\n  //     .then(item => {\n  //       this.addItemToState(item);\n  //     });\n  //   this.toggleForm();\n  // };\n  //\n  // addItemToState = item => {\n  //   let newArray = [item, ...this.state.items];\n  //   this.setState({ items: newArray });\n  // };\n\n  // --------------- Master Filter Handler ------------------\n  filterHandler = () => {\n    if (this.state.searchTerm && this.state.selection) {\n      let searchResults = this.nameSearchFilter(this.state.searchTerm);\n      return this.doubleSearchFilter(searchResults, this.state.selection);\n    } else if (this.state.selection) {\n      return this.categorySelectionFilter(this.state.selection);\n    } else if (this.state.searchTerm) {\n      return this.nameSearchFilter(this.state.searchTerm);\n    } else {\n      return this.state.items;\n    }\n  };\n\n  // ----------------- Handle Search Only ----------------\n  nameSearchFilter = input => {\n    return this.state.items.filter(item => {\n      return item.name.toLowerCase().includes(input.toLowerCase());\n    });\n  };\n\n  // ------- Handle Selection Only -----\n  categorySelectionFilter = input => {\n    if (input.toLowerCase() !== \"all\") {\n      return this.state.items.filter(item => {\n        return item.category.toLowerCase().includes(input.toLowerCase());\n      });\n    } else {\n      return this.state.items;\n    }\n  };\n  // -------- Helper Function to handle Both Selection and Search Filters ---------\n  doubleSearchFilter = (arrayOfItems, selection) => {\n    return arrayOfItems.filter(item => {\n      return item.category.toLowerCase().includes(selection.toLowerCase());\n    });\n  };\n\n  // // ------------- Toggle Sell Form --------------\n  //\n  // toggleForm = () => {\n  //   this.setState({ sellForm: !this.state.sellForm });\n  // };\n\n  // ------------- Buy Item --------------\n  //\n  // buyHandler = item => {\n  //   console.log(\"buying from main\");\n  //   let user = this.props.user;\n  //\n  //   console.log(\"this is my user:\", user);\n  //   console.log(\"this is my item:\", item);\n  //   console.log(\"this is my item's seller:\", item.users[0]);\n  //\n  //   if (user.username !== item.users[0].username) {\n  //     let config = {\n  //       method: \"PATCH\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       },\n  //       body: JSON.stringify({ user: user, item: item })\n  //     };\n  //     console.log(\"this is my item in main:\", item);\n  //     fetch(`http://localhost:3000/items/${item.id}`, config).then(resp => {\n  //       if (resp.status === 204) {\n  //         this.fetchItems();\n  //         this.props.history.push(\"/items\");\n  //       }\n  //     });\n  //   } else {\n  //     window.alert(\"Can't buy your own items !\");\n  //   }\n  // };\n\n  render() {\n    // let items = this.filterHandler();\n    // let categories = this.state.categories;\n    let items = this.state.items;\n    console.log(\"this is my user in Main:\", this.props.user);\n    // <NavBar\n    //   logOutHandler={this.props.logOutHandler}\n    //   user={this.props.user}\n    //   toggleFormHandler={this.toggleForm}\n    //   categories={categories}\n    //   createSubmitHandler={this.createSubmitHandler}\n    //   title=\"Caravan\"\n    //   logo=\"truck\"\n    //   color=\"primary\"\n    //   selectHandler={this.selectHandler}\n    //   submitHandler={this.submitHandler}\n    //   />\n    // <ItemContainer buyHandler={this.buyHandler} items={items} />\n    return (\n      <div>\n        <MainMenu />\n        <Switch>\n          <Route\n            path=\"/items\"\n            render={routerProps => <ItemContainer items={items} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Main);\n"]},"metadata":{},"sourceType":"module"}