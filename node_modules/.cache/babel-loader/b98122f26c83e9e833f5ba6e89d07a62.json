{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js\";\nimport React from \"react\";\nimport { ActionCable } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ConversationsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chats: [],\n      activeConversation: null\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"\".concat(API_ROOT, \"/chats\")).then(res => res.json()).then(chats => this.setState({\n        chats\n      }));\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        activeConversation: id\n      });\n    };\n\n    this.handleReceivedConversation = response => {\n      const conversation = response.conversation;\n      this.setState({\n        chats: [...this.state.chats, conversation]\n      });\n    };\n\n    this.handleReceivedMessage = response => {\n      const message = response.message;\n      const chats = [...this.state.chats];\n      const conversation = chats.find(conversation => conversation.id === message.conversation_id);\n      conversation.messages = [...conversation.messages, message];\n      this.setState({\n        chats\n      });\n    };\n\n    this.render = () => {\n      const _this$state = this.state,\n            chats = _this$state.chats,\n            activeConversation = _this$state.activeConversation;\n      return React.createElement(\"div\", {\n        className: \"ChatsList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ActionCable, {\n        channel: {\n          channel: \"ChatsChannel\"\n        },\n        onReceived: this.handleReceivedConversation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), this.state.chats.length ? React.createElement(Cable, {\n        chats: chats,\n        handleReceivedMessage: this.handleReceivedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }) : null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Conversations\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, mapConversations(chats, this.handleClick)), React.createElement(NewChatForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), activeConversation ? React.createElement(MessagesArea, {\n        conversation: findActiveConversation(chats, activeConversation),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : null);\n    };\n  }\n\n}\n\nexport default ConversationsList; // helpers\n\nconst findActiveConversation = (chats, activeConversation) => {\n  return chats.find(conversation => conversation.id === activeConversation);\n};\n\nconst mapConversations = (chats, handleClick) => {\n  return chats.map(conversation => {\n    return React.createElement(\"li\", {\n      key: conversation.id,\n      onClick: () => handleClick(conversation.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, conversation.title);\n  });\n};","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js"],"names":["React","ActionCable","API_ROOT","NewChatForm","MessagesArea","Cable","ConversationsList","Component","state","chats","activeConversation","componentDidMount","fetch","then","res","json","setState","handleClick","id","handleReceivedConversation","response","conversation","handleReceivedMessage","message","find","conversation_id","messages","render","channel","length","mapConversations","findActiveConversation","map","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ActionCable } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ConversationsList extends React.Component {\n  state = {\n    chats: [],\n    activeConversation: null\n  };\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/chats`)\n      .then(res => res.json())\n      .then(chats => this.setState({ chats }));\n  };\n\n  handleClick = id => {\n    this.setState({ activeConversation: id });\n  };\n\n  handleReceivedConversation = response => {\n    const { conversation } = response;\n    this.setState({\n      chats: [...this.state.chats, conversation]\n    });\n  };\n\n  handleReceivedMessage = response => {\n    const { message } = response;\n    const chats = [...this.state.chats];\n    const conversation = chats.find(\n      conversation => conversation.id === message.conversation_id\n    );\n    conversation.messages = [...conversation.messages, message];\n    this.setState({ chats });\n  };\n\n  render = () => {\n    const { chats, activeConversation } = this.state;\n    return (\n      <div className=\"ChatsList\">\n        <ActionCable\n          channel={{ channel: \"ChatsChannel\" }}\n          onReceived={this.handleReceivedConversation}\n        />\n        {this.state.chats.length ? (\n          <Cable\n            chats={chats}\n            handleReceivedMessage={this.handleReceivedMessage}\n          />\n        ) : null}\n        <h2>Conversations</h2>\n        <ul>{mapConversations(chats, this.handleClick)}</ul>\n        <NewChatForm />\n        {activeConversation ? (\n          <MessagesArea\n            conversation={findActiveConversation(chats, activeConversation)}\n          />\n        ) : null}\n      </div>\n    );\n  };\n}\n\nexport default ConversationsList;\n\n// helpers\n\nconst findActiveConversation = (chats, activeConversation) => {\n  return chats.find(conversation => conversation.id === activeConversation);\n};\n\nconst mapConversations = (chats, handleClick) => {\n  return chats.map(conversation => {\n    return (\n      <li key={conversation.id} onClick={() => handleClick(conversation.id)}>\n        {conversation.title}\n      </li>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}