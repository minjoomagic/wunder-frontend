{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js\";\nimport React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ChatsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chats: [],\n      activeChat: null\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"\".concat(API_ROOT, \"/chats\")).then(res => res.json()).then(chats => this.setState({\n        chats\n      }));\n    };\n\n    this.handleClick = id => {\n      console.log(\"user????\", this.state.user);\n      this.setState({\n        activeChat: id,\n        user: this.state.user\n      });\n    };\n\n    this.handleReceivedChat = response => {\n      const chat = response.chat;\n      this.setState({\n        chats: [...this.state.chats, chat]\n      });\n    };\n\n    this.handleReceivedMessage = response => {\n      const message = response.message;\n      const chats = [...this.state.chats];\n      const chat = chats.find(chat => chat.id === message.chat_id);\n      chat.messages = [...chat.messages, message];\n      this.setState({\n        chats\n      });\n    };\n\n    this.render = () => {\n      const _this$state = this.state,\n            chats = _this$state.chats,\n            activeChat = _this$state.activeChat,\n            user = _this$state.user;\n      console.log(\"oin chats list USER:\", this.props.user); // -------------------so weird that line 43 classname and line 55 chats if same name then double results-----\n\n      return React.createElement(\"div\", {\n        className: \"chattybox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(ActionCableConsumer, {\n        channel: {\n          channel: \"ChatsChannel\"\n        },\n        onReceived: this.handleReceivedChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), this.state.chats.length ? React.createElement(Cable, {\n        chats: chats,\n        handleReceivedMessage: this.handleReceivedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }) : null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Chats\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, mapChats(chats, this.handleClick, this.props.user)), React.createElement(NewChatForm, {\n        user: this.props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), activeChat && user ? React.createElement(MessagesArea, {\n        user: user,\n        chat: findActiveChat(chats, activeChat),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) : null);\n    };\n  }\n\n}\n\nexport default ChatsList; // helpers\n\nconst findActiveChat = (chats, activeChat) => {\n  return chats.find(chat => chat.id === activeChat);\n};\n\nconst mapChats = (chats, handleClick, user) => {\n  return chats.map(chat => {\n    return React.createElement(\"li\", {\n      key: chat.id,\n      onClick: () => handleClick(chat.id, user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, chat.title, user.username);\n  });\n};","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js"],"names":["React","ActionCableConsumer","API_ROOT","NewChatForm","MessagesArea","Cable","ChatsList","Component","state","chats","activeChat","componentDidMount","fetch","then","res","json","setState","handleClick","id","console","log","user","handleReceivedChat","response","chat","handleReceivedMessage","message","find","chat_id","messages","render","props","channel","length","mapChats","findActiveChat","map","title","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ChatsList extends React.Component {\n  state = {\n    chats: [],\n    activeChat: null\n  };\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/chats`)\n      .then(res => res.json())\n      .then(chats => this.setState({ chats }));\n  };\n\n  handleClick = id => {\n    console.log(\"user????\", this.state.user);\n    this.setState({ activeChat: id, user: this.state.user });\n  };\n\n  handleReceivedChat = response => {\n    const { chat } = response;\n    this.setState({\n      chats: [...this.state.chats, chat]\n    });\n  };\n\n  handleReceivedMessage = response => {\n    const { message } = response;\n    const chats = [...this.state.chats];\n    const chat = chats.find(chat => chat.id === message.chat_id);\n    chat.messages = [...chat.messages, message];\n    this.setState({ chats });\n  };\n\n  render = () => {\n    const { chats, activeChat, user } = this.state;\n    console.log(\"oin chats list USER:\", this.props.user);\n    // -------------------so weird that line 43 classname and line 55 chats if same name then double results-----\n    return (\n      <div className=\"chattybox\">\n        <ActionCableConsumer\n          channel={{ channel: \"ChatsChannel\" }}\n          onReceived={this.handleReceivedChat}\n        />\n        {this.state.chats.length ? (\n          <Cable\n            chats={chats}\n            handleReceivedMessage={this.handleReceivedMessage}\n          />\n        ) : null}\n        <h2>Chats</h2>\n        <ul>{mapChats(chats, this.handleClick, this.props.user)}</ul>\n        <NewChatForm user={this.props.user} />\n        {activeChat && user ? (\n          <MessagesArea user={user} chat={findActiveChat(chats, activeChat)} />\n        ) : null}\n      </div>\n    );\n  };\n}\n\nexport default ChatsList;\n\n// helpers\n\nconst findActiveChat = (chats, activeChat) => {\n  return chats.find(chat => chat.id === activeChat);\n};\n\nconst mapChats = (chats, handleClick, user) => {\n  return chats.map(chat => {\n    return (\n      <li key={chat.id} onClick={() => handleClick(chat.id, user)}>\n        {chat.title}\n        {user.username}\n      </li>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}