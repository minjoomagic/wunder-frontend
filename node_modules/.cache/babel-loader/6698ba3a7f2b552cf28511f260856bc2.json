{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Main/Main.js\";\nimport React from \"react\"; // import ItemContainer from \"./ItemContainer\";\n\nimport { withRouter } from \"react-router-dom\";\nimport NavBar from \"../NavBar/NavBar\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      user: null,\n      searchTerm: \"\",\n      selection: \"\",\n      sellForm: false\n    };\n\n    this.fetchItems = () => {\n      fetch(\"http://localhost:3000/items\").then(res => res.json()).then(items => {\n        this.setState({\n          items: items\n        });\n      });\n    };\n\n    this.fetchCategories = () => {\n      fetch(\"http://localhost:3000/categories\").then(res => res.json()).then(categories => this.setState({\n        categories: categories\n      }));\n    };\n\n    this.submitHandler = searchTerm => {\n      this.setState({\n        searchTerm: searchTerm\n      });\n    };\n\n    this.selectHandler = selection => {\n      this.setState({\n        selection: selection\n      });\n    };\n\n    this.createSubmitHandler = (item, user) => {\n      let url = \"http://localhost:3000/items\";\n      let config = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: user,\n          item: item\n        })\n      };\n      fetch(url, config).then(res => res.json()).then(item => {\n        this.addItemToState(item);\n      });\n      this.toggleForm();\n    };\n\n    this.addItemToState = item => {\n      let newArray = [item, ...this.state.items];\n      this.setState({\n        items: newArray\n      });\n    };\n\n    this.filterHandler = () => {\n      if (this.state.searchTerm && this.state.selection) {\n        let searchResults = this.nameSearchFilter(this.state.searchTerm);\n        return this.doubleSearchFilter(searchResults, this.state.selection);\n      } else if (this.state.selection) {\n        return this.categorySelectionFilter(this.state.selection);\n      } else if (this.state.searchTerm) {\n        return this.nameSearchFilter(this.state.searchTerm);\n      } else {\n        return this.state.items;\n      }\n    };\n\n    this.nameSearchFilter = input => {\n      return this.state.items.filter(item => {\n        return item.name.toLowerCase().includes(input.toLowerCase());\n      });\n    };\n\n    this.categorySelectionFilter = input => {\n      if (input.toLowerCase() !== \"all\") {\n        return this.state.items.filter(item => {\n          return item.category.toLowerCase().includes(input.toLowerCase());\n        });\n      } else {\n        return this.state.items;\n      }\n    };\n\n    this.doubleSearchFilter = (arrayOfItems, selection) => {\n      return arrayOfItems.filter(item => {\n        return item.category.toLowerCase().includes(selection.toLowerCase());\n      });\n    };\n\n    this.toggleForm = () => {\n      this.setState({\n        sellForm: !this.state.sellForm\n      });\n    };\n\n    this.buyHandler = item => {\n      console.log(\"buying from main\");\n      let user = this.props.user;\n      console.log(\"this is my user:\", user);\n      console.log(\"this is my item:\", item);\n      console.log(\"this is my item's seller:\", item.users[0]);\n\n      if (user.username !== item.users[0].username) {\n        let config = {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: user,\n            item: item\n          })\n        };\n        console.log(\"this is my item in main:\", item);\n        fetch(\"http://localhost:3000/items/\".concat(item.id), config).then(resp => {\n          if (resp.status === 204) {\n            this.fetchItems();\n            this.props.history.push(\"/items\");\n          }\n        });\n      } else {\n        window.alert(\"Can't buy your own items !\");\n      }\n    };\n  }\n\n  // ================= Fetch Data =====================\n  componentDidMount() {\n    console.log(\"Main did mount\");\n    this.setState({\n      user: this.props.user\n    });\n    this.fetchItems();\n    this.fetchCategories();\n  } // ----------------- Fetch Items ---------------------\n\n\n  render() {\n    let items = this.filterHandler();\n    let categories = this.state.categories;\n    console.log(\"this is my user in Main:\", this.props.user); // <NavBar\n    //   logOutHandler={this.props.logOutHandler}\n    //   user={this.props.user}\n    //   toggleFormHandler={this.toggleForm}\n    //   categories={categories}\n    //   createSubmitHandler={this.createSubmitHandler}\n    //   title=\"Caravan\"\n    //   logo=\"truck\"\n    //   color=\"primary\"\n    //   selectHandler={this.selectHandler}\n    //   submitHandler={this.submitHandler}\n    // />\n    // <ItemContainer buyHandler={this.buyHandler} items={items} />\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(Main);","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Main/Main.js"],"names":["React","withRouter","NavBar","Main","Component","state","items","user","searchTerm","selection","sellForm","fetchItems","fetch","then","res","json","setState","fetchCategories","categories","submitHandler","selectHandler","createSubmitHandler","item","url","config","method","headers","body","JSON","stringify","addItemToState","toggleForm","newArray","filterHandler","searchResults","nameSearchFilter","doubleSearchFilter","categorySelectionFilter","input","filter","name","toLowerCase","includes","category","arrayOfItems","buyHandler","console","log","props","users","username","id","resp","status","history","push","window","alert","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// import ItemContainer from \"./ItemContainer\";\nimport { withRouter } from \"react-router-dom\";\nimport NavBar from \"../NavBar/NavBar\";\n\nclass Main extends React.Component {\n  state = {\n    items: [],\n    user: null,\n    searchTerm: \"\",\n    selection: \"\",\n    sellForm: false\n  };\n\n  // ================= Fetch Data =====================\n  componentDidMount() {\n    console.log(\"Main did mount\");\n    this.setState({ user: this.props.user });\n    this.fetchItems();\n    this.fetchCategories();\n  }\n\n  // ----------------- Fetch Items ---------------------\n  fetchItems = () => {\n    fetch(\"http://localhost:3000/items\")\n      .then(res => res.json())\n      .then(items => {\n        this.setState({ items: items });\n      });\n  };\n\n  // ---------------- Fetch Categories ---------------------\n  fetchCategories = () => {\n    fetch(\"http://localhost:3000/categories\")\n      .then(res => res.json())\n      .then(categories => this.setState({ categories: categories }));\n  };\n\n  //==================== Event Handlers ======================\n  submitHandler = searchTerm => {\n    this.setState({ searchTerm: searchTerm });\n  };\n\n  selectHandler = selection => {\n    this.setState({ selection: selection });\n  };\n\n  createSubmitHandler = (item, user) => {\n    let url = \"http://localhost:3000/items\";\n    let config = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ user: user, item: item })\n    };\n    fetch(url, config)\n      .then(res => res.json())\n      .then(item => {\n        this.addItemToState(item);\n      });\n    this.toggleForm();\n  };\n\n  addItemToState = item => {\n    let newArray = [item, ...this.state.items];\n    this.setState({ items: newArray });\n  };\n\n  // --------------- Master Filter Handler ------------------\n  filterHandler = () => {\n    if (this.state.searchTerm && this.state.selection) {\n      let searchResults = this.nameSearchFilter(this.state.searchTerm);\n      return this.doubleSearchFilter(searchResults, this.state.selection);\n    } else if (this.state.selection) {\n      return this.categorySelectionFilter(this.state.selection);\n    } else if (this.state.searchTerm) {\n      return this.nameSearchFilter(this.state.searchTerm);\n    } else {\n      return this.state.items;\n    }\n  };\n\n  // ----------------- Handle Search Only ----------------\n  nameSearchFilter = input => {\n    return this.state.items.filter(item => {\n      return item.name.toLowerCase().includes(input.toLowerCase());\n    });\n  };\n\n  // ------- Handle Selection Only -----\n  categorySelectionFilter = input => {\n    if (input.toLowerCase() !== \"all\") {\n      return this.state.items.filter(item => {\n        return item.category.toLowerCase().includes(input.toLowerCase());\n      });\n    } else {\n      return this.state.items;\n    }\n  };\n  // -------- Helper Function to handle Both Selection and Search Filters ---------\n  doubleSearchFilter = (arrayOfItems, selection) => {\n    return arrayOfItems.filter(item => {\n      return item.category.toLowerCase().includes(selection.toLowerCase());\n    });\n  };\n\n  // ------------- Toggle Sell Form --------------\n\n  toggleForm = () => {\n    this.setState({ sellForm: !this.state.sellForm });\n  };\n\n  // ------------- Buy Item --------------\n\n  buyHandler = item => {\n    console.log(\"buying from main\");\n    let user = this.props.user;\n\n    console.log(\"this is my user:\", user);\n    console.log(\"this is my item:\", item);\n    console.log(\"this is my item's seller:\", item.users[0]);\n\n    if (user.username !== item.users[0].username) {\n      let config = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ user: user, item: item })\n      };\n      console.log(\"this is my item in main:\", item);\n      fetch(`http://localhost:3000/items/${item.id}`, config).then(resp => {\n        if (resp.status === 204) {\n          this.fetchItems();\n          this.props.history.push(\"/items\");\n        }\n      });\n    } else {\n      window.alert(\"Can't buy your own items !\");\n    }\n  };\n\n  render() {\n    let items = this.filterHandler();\n    let categories = this.state.categories;\n    console.log(\"this is my user in Main:\", this.props.user);\n    // <NavBar\n    //   logOutHandler={this.props.logOutHandler}\n    //   user={this.props.user}\n    //   toggleFormHandler={this.toggleForm}\n    //   categories={categories}\n    //   createSubmitHandler={this.createSubmitHandler}\n    //   title=\"Caravan\"\n    //   logo=\"truck\"\n    //   color=\"primary\"\n    //   selectHandler={this.selectHandler}\n    //   submitHandler={this.submitHandler}\n    // />\n    // <ItemContainer buyHandler={this.buyHandler} items={items} />\n    return <div />;\n  }\n}\n\nexport default withRouter(Main);\n"]},"metadata":{},"sourceType":"module"}