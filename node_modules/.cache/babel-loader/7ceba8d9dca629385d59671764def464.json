{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Main/Main.js\";\nimport React from \"react\"; // import ItemContainer from \"./ItemContainer\";\n\nimport { withRouter } from \"react-router-dom\";\nimport MainMenu from \"./MainMenu\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      user: null\n    };\n\n    this.fetchItems = () => {\n      fetch(\"http://localhost:3000/items\").then(res => res.json()).then(items => {\n        this.setState({\n          items: items\n        });\n      });\n    };\n\n    this.filterHandler = () => {\n      if (this.state.searchTerm && this.state.selection) {\n        let searchResults = this.nameSearchFilter(this.state.searchTerm);\n        return this.doubleSearchFilter(searchResults, this.state.selection);\n      } else if (this.state.selection) {\n        return this.categorySelectionFilter(this.state.selection);\n      } else if (this.state.searchTerm) {\n        return this.nameSearchFilter(this.state.searchTerm);\n      } else {\n        return this.state.items;\n      }\n    };\n\n    this.nameSearchFilter = input => {\n      return this.state.items.filter(item => {\n        return item.name.toLowerCase().includes(input.toLowerCase());\n      });\n    };\n\n    this.categorySelectionFilter = input => {\n      if (input.toLowerCase() !== \"all\") {\n        return this.state.items.filter(item => {\n          return item.category.toLowerCase().includes(input.toLowerCase());\n        });\n      } else {\n        return this.state.items;\n      }\n    };\n\n    this.doubleSearchFilter = (arrayOfItems, selection) => {\n      return arrayOfItems.filter(item => {\n        return item.category.toLowerCase().includes(selection.toLowerCase());\n      });\n    };\n\n    this.buyHandler = item => {\n      console.log(\"buying from main\");\n      let user = this.props.user;\n      console.log(\"this is my user:\", user);\n      console.log(\"this is my item:\", item);\n      console.log(\"this is my item's seller:\", item.users[0]);\n\n      if (user.username !== item.users[0].username) {\n        let config = {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: user,\n            item: item\n          })\n        };\n        console.log(\"this is my item in main:\", item);\n        fetch(\"http://localhost:3000/items/\".concat(item.id), config).then(resp => {\n          if (resp.status === 204) {\n            this.fetchItems();\n            this.props.history.push(\"/items\");\n          }\n        });\n      } else {\n        window.alert(\"Can't buy your own items !\");\n      }\n    };\n  }\n\n  // ================= Fetch Data =====================\n  componentDidMount() {\n    console.log(\"Main did mount\");\n    this.setState({\n      user: this.props.user\n    });\n    this.fetchItems(); // this.fetchCategories();\n  } // ----------------- Fetch Items ---------------------\n\n\n  render() {\n    let items = this.filterHandler();\n    let categories = this.state.categories;\n    console.log(\"this is my user in Main:\", this.props.user); // <NavBar\n    //   logOutHandler={this.props.logOutHandler}\n    //   user={this.props.user}\n    //   toggleFormHandler={this.toggleForm}\n    //   categories={categories}\n    //   createSubmitHandler={this.createSubmitHandler}\n    //   title=\"Caravan\"\n    //   logo=\"truck\"\n    //   color=\"primary\"\n    //   selectHandler={this.selectHandler}\n    //   submitHandler={this.submitHandler}\n    //   />\n    // <ItemContainer buyHandler={this.buyHandler} items={items} />\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(MainMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(Main);","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Main/Main.js"],"names":["React","withRouter","MainMenu","Main","Component","state","items","user","fetchItems","fetch","then","res","json","setState","filterHandler","searchTerm","selection","searchResults","nameSearchFilter","doubleSearchFilter","categorySelectionFilter","input","filter","item","name","toLowerCase","includes","category","arrayOfItems","buyHandler","console","log","props","users","username","config","method","headers","body","JSON","stringify","id","resp","status","history","push","window","alert","componentDidMount","render","categories"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// import ItemContainer from \"./ItemContainer\";\nimport { withRouter } from \"react-router-dom\";\nimport MainMenu from \"./MainMenu\";\n\nclass Main extends React.Component {\n  state = {\n    items: [],\n    user: null\n  };\n\n  // ================= Fetch Data =====================\n  componentDidMount() {\n    console.log(\"Main did mount\");\n    this.setState({ user: this.props.user });\n    this.fetchItems();\n    // this.fetchCategories();\n  }\n\n  // ----------------- Fetch Items ---------------------\n  fetchItems = () => {\n    fetch(\"http://localhost:3000/items\")\n      .then(res => res.json())\n      .then(items => {\n        this.setState({ items: items });\n      });\n  };\n\n  // ---------------- Fetch Categories ---------------------\n  // fetchCategories = () => {\n  //   fetch(\"http://localhost:3000/categories\")\n  //     .then(res => res.json())\n  //     .then(categories => this.setState({ categories: categories }));\n  // };\n\n  //==================== Event Handlers ======================\n  // submitHandler = searchTerm => {\n  //   this.setState({ searchTerm: searchTerm });\n  // };\n  //\n  // selectHandler = selection => {\n  //   this.setState({ selection: selection });\n  // };\n\n  // createSubmitHandler = (item, user) => {\n  //   let url = \"http://localhost:3000/items\";\n  //   let config = {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({ user: user, item: item })\n  //   };\n  //   fetch(url, config)\n  //     .then(res => res.json())\n  //     .then(item => {\n  //       this.addItemToState(item);\n  //     });\n  //   this.toggleForm();\n  // };\n  //\n  // addItemToState = item => {\n  //   let newArray = [item, ...this.state.items];\n  //   this.setState({ items: newArray });\n  // };\n\n  // --------------- Master Filter Handler ------------------\n  filterHandler = () => {\n    if (this.state.searchTerm && this.state.selection) {\n      let searchResults = this.nameSearchFilter(this.state.searchTerm);\n      return this.doubleSearchFilter(searchResults, this.state.selection);\n    } else if (this.state.selection) {\n      return this.categorySelectionFilter(this.state.selection);\n    } else if (this.state.searchTerm) {\n      return this.nameSearchFilter(this.state.searchTerm);\n    } else {\n      return this.state.items;\n    }\n  };\n\n  // ----------------- Handle Search Only ----------------\n  nameSearchFilter = input => {\n    return this.state.items.filter(item => {\n      return item.name.toLowerCase().includes(input.toLowerCase());\n    });\n  };\n\n  // ------- Handle Selection Only -----\n  categorySelectionFilter = input => {\n    if (input.toLowerCase() !== \"all\") {\n      return this.state.items.filter(item => {\n        return item.category.toLowerCase().includes(input.toLowerCase());\n      });\n    } else {\n      return this.state.items;\n    }\n  };\n  // -------- Helper Function to handle Both Selection and Search Filters ---------\n  doubleSearchFilter = (arrayOfItems, selection) => {\n    return arrayOfItems.filter(item => {\n      return item.category.toLowerCase().includes(selection.toLowerCase());\n    });\n  };\n\n  // // ------------- Toggle Sell Form --------------\n  //\n  // toggleForm = () => {\n  //   this.setState({ sellForm: !this.state.sellForm });\n  // };\n\n  // ------------- Buy Item --------------\n\n  buyHandler = item => {\n    console.log(\"buying from main\");\n    let user = this.props.user;\n\n    console.log(\"this is my user:\", user);\n    console.log(\"this is my item:\", item);\n    console.log(\"this is my item's seller:\", item.users[0]);\n\n    if (user.username !== item.users[0].username) {\n      let config = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ user: user, item: item })\n      };\n      console.log(\"this is my item in main:\", item);\n      fetch(`http://localhost:3000/items/${item.id}`, config).then(resp => {\n        if (resp.status === 204) {\n          this.fetchItems();\n          this.props.history.push(\"/items\");\n        }\n      });\n    } else {\n      window.alert(\"Can't buy your own items !\");\n    }\n  };\n\n  render() {\n    let items = this.filterHandler();\n    let categories = this.state.categories;\n    console.log(\"this is my user in Main:\", this.props.user);\n    // <NavBar\n    //   logOutHandler={this.props.logOutHandler}\n    //   user={this.props.user}\n    //   toggleFormHandler={this.toggleForm}\n    //   categories={categories}\n    //   createSubmitHandler={this.createSubmitHandler}\n    //   title=\"Caravan\"\n    //   logo=\"truck\"\n    //   color=\"primary\"\n    //   selectHandler={this.selectHandler}\n    //   submitHandler={this.submitHandler}\n    //   />\n    // <ItemContainer buyHandler={this.buyHandler} items={items} />\n    return (\n      <div>\n        <MainMenu />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Main);\n"]},"metadata":{},"sourceType":"module"}