{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/MessagesArea.js\";\nimport React from \"react\";\nimport NewMessageForm from \"./NewMessageForm\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst MessagesArea = props => {\n  //\n  console.log(\"Messages area CHAT props:\", props);\n  console.log(\"Messages area USER props:\", props.chat.messages);\n  return React.createElement(\"div\", {\n    className: \"messagesArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Chat Room: \", props.chat.title), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Chatting as: \", props.user.username), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, orderedMessages(props)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(NewMessageForm, {\n    chat_id: props.chat.id,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Leave\")));\n};\n\nexport default MessagesArea; // helpers\n\nconst orderedMessages = (props, {\n  chat: {\n    messages\n  }\n}) => {\n  const sortedMessages = messages.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n  return sortedMessages.map(message => {\n    return props.user.username === message.user ? React.createElement(\"div\", {\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"username-me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, message.user, \"*:\"), React.createElement(\"h4\", {\n      className: \"msg-me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, message.text)) : React.createElement(\"div\", {\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"username-guest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, message.user, \"*:\"), React.createElement(\"h4\", {\n      className: \"msg-guest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, message.text));\n  });\n};","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/MessagesArea.js"],"names":["React","NewMessageForm","Button","Link","MessagesArea","props","console","log","chat","messages","title","user","username","orderedMessages","id","sortedMessages","sort","a","b","Date","created_at","map","message","text"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewMessageForm from \"./NewMessageForm\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst MessagesArea = props => {\n  //\n  console.log(\"Messages area CHAT props:\", props);\n  console.log(\"Messages area USER props:\", props.chat.messages);\n  return (\n    <div className=\"messagesArea\">\n      <h2>Chat Room: {props.chat.title}</h2>\n      <br />\n      <h5>Chatting as: {props.user.username}</h5>\n      <br />\n      <br />\n      <p className=\"\">{orderedMessages(props)}</p>\n      <br />\n      <br />\n      <NewMessageForm chat_id={props.chat.id} user={props.user} />\n      <br />\n      <Link to={\"/main\"}>\n        <Button variant=\"danger\">Leave</Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default MessagesArea;\n\n// helpers\n\nconst orderedMessages = (props, { chat: { messages } }) => {\n  const sortedMessages = messages.sort(\n    (a, b) => new Date(a.created_at) - new Date(b.created_at)\n  );\n  return sortedMessages.map(message => {\n    return props.user.username === message.user ? (\n      <div key={message.id}>\n        <h5 className=\"username-me\">{message.user}*:</h5>\n        <h4 className=\"msg-me\">{message.text}</h4>\n      </div>\n    ) : (\n      <div key={message.id}>\n        <h5 className=\"username-guest\">{message.user}*:</h5>\n        <h4 className=\"msg-guest\">{message.text}</h4>\n      </div>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}