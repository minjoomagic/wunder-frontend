{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js\";\nimport React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ChatsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chats: [],\n      activeChat: null\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"\".concat(API_ROOT, \"/chats\")).then(res => res.json()).then(chats => this.setState({\n        chats: chats\n      }));\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        activeChat: id\n      });\n    };\n\n    this.handleReceivedChat = response => {\n      console.log(\"handlechat\", response);\n      const chat = response.chat;\n      this.setState({\n        chats: [...this.state.chats, chat]\n      });\n    };\n\n    this.handleReceivedMessage = response => {\n      console.log(\"handlereceive\", response);\n      const message = response.message;\n      const chats = [...this.state.chats];\n      const chat = chats.find(chat => chat.id === message.chat_id);\n      chat.messages = [...chat.messages, message];\n      this.setState({\n        chats\n      });\n    };\n\n    this.render = () => {\n      const _this$state = this.state,\n            chats = _this$state.chats,\n            activeChat = _this$state.activeChat;\n      return React.createElement(\"div\", {\n        className: \"chatsList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ActionCableConsumer, {\n        channel: {\n          channel: \"ChatsChannel\"\n        },\n        onReceived: this.handleReceivedChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), this.state.chats.length ? React.createElement(Cable, {\n        chats: chats,\n        handleReceivedMessage: this.handleReceivedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }) : null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Chats\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, mapChats(chats, this.handleClick)), React.createElement(NewChatForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), activeChat ? React.createElement(MessagesArea, {\n        chat: findActiveChat(chats, activeChat),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : null);\n    };\n  }\n\n}\n\nexport default ChatsList; // helpers\n\nconst findActiveChat = (chats, activeChat) => {\n  return chats.find(chat => chat.id === activeChat);\n};\n\nconst mapChats = (chats, handleClick) => {\n  return chats.map(chat => {\n    return React.createElement(\"li\", {\n      key: chat.id,\n      onClick: () => handleClick(chat.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, chat.title);\n  });\n};","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js"],"names":["React","ActionCableConsumer","API_ROOT","NewChatForm","MessagesArea","Cable","ChatsList","Component","state","chats","activeChat","componentDidMount","fetch","then","res","json","setState","handleClick","id","handleReceivedChat","response","console","log","chat","handleReceivedMessage","message","find","chat_id","messages","render","channel","length","mapChats","findActiveChat","map","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ChatsList extends React.Component {\n  state = {\n    chats: [],\n    activeChat: null\n  };\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/chats`)\n      .then(res => res.json())\n      .then(chats => this.setState({ chats: chats }));\n  };\n\n  handleClick = id => {\n    this.setState({ activeChat: id });\n  };\n\n  handleReceivedChat = response => {\n    console.log(\"handlechat\", response);\n    const { chat } = response;\n    this.setState({\n      chats: [...this.state.chats, chat]\n    });\n  };\n\n  handleReceivedMessage = response => {\n    console.log(\"handlereceive\", response);\n    const { message } = response;\n    const chats = [...this.state.chats];\n    const chat = chats.find(chat => chat.id === message.chat_id);\n    chat.messages = [...chat.messages, message];\n    this.setState({ chats });\n  };\n\n  render = () => {\n    const { chats, activeChat } = this.state;\n    return (\n      <div className=\"chatsList\">\n        <ActionCableConsumer\n          channel={{ channel: \"ChatsChannel\" }}\n          onReceived={this.handleReceivedChat}\n        />\n        {this.state.chats.length ? (\n          <Cable\n            chats={chats}\n            handleReceivedMessage={this.handleReceivedMessage}\n          />\n        ) : null}\n        <h2>Chats</h2>\n        <ul>{mapChats(chats, this.handleClick)}</ul>\n        <NewChatForm />\n        {activeChat ? (\n          <MessagesArea chat={findActiveChat(chats, activeChat)} />\n        ) : null}\n      </div>\n    );\n  };\n}\n\nexport default ChatsList;\n\n// helpers\n\nconst findActiveChat = (chats, activeChat) => {\n  return chats.find(chat => chat.id === activeChat);\n};\n\nconst mapChats = (chats, handleClick) => {\n  return chats.map(chat => {\n    return (\n      <li key={chat.id} onClick={() => handleClick(chat.id)}>\n        {chat.title}\n      </li>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}