{"ast":null,"code":"var _jsxFileName = \"/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js\";\nimport React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ChatsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chats: [],\n      activeChat: null // user: this.props.user\n\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"\".concat(API_ROOT, \"/chats\")).then(res => res.json()).then(chats => this.setState({\n        chats\n      }));\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        activeChat: id\n      });\n    };\n\n    this.handleReceivedChat = response => {\n      const chat = response.chat;\n      this.setState({\n        chats: [...this.state.chats, chat]\n      });\n    };\n\n    this.handleReceivedMessage = response => {\n      const message = response.message;\n      const chats = [...this.state.chats];\n      const chat = chats.find(chat => chat.id === message.chat_id);\n      chat.messages = [...chat.messages, message];\n      this.setState({\n        chats\n      });\n    };\n\n    this.deleteHandler = e => {\n      console.log(\"in handelr\", e);\n    };\n\n    this.render = () => {\n      const _this$state = this.state,\n            chats = _this$state.chats,\n            activeChat = _this$state.activeChat;\n      console.log(\"oin chats list USER:\", this.props); // -------------------so weird that line 43 classname and line 55 chats if same name then double results-----\n\n      return React.createElement(\"div\", {\n        className: \"chattybox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ActionCableConsumer, {\n        channel: {\n          channel: \"ChatsChannel\"\n        },\n        onReceived: this.handleReceivedChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), this.state.chats.length ? React.createElement(Cable, {\n        chats: chats,\n        handleReceivedMessage: this.handleReceivedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }) : null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Currently Available Chefs:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, mapChats(chats, this.handleClick, this.props.user)), React.createElement(NewChatForm, {\n        user: this.props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), activeChat && this.props.user ? React.createElement(MessagesArea, {\n        user: this.props.user,\n        chat: findActiveChat(chats, activeChat),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : null);\n    };\n  }\n\n}\n\nexport default ChatsList; // helpers\n\nconst findActiveChat = (chats, activeChat) => {\n  return chats.find(chat => chat.id === activeChat);\n};\n\nconst mapChats = (chats, handleClick) => {\n  return chats.map(chat => {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      key: chat.id,\n      onClick: () => handleClick(chat.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Chat Room: \", chat.title), React.createElement(\"button\", {\n      onClick: this.deleteHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Delete\"));\n  });\n};","map":{"version":3,"sources":["/Users/mjmagic/Development/MOD5/final-project/Final-Project-Wunder/wunder-frontend/src/Components/Chat/ChatsList.js"],"names":["React","ActionCableConsumer","API_ROOT","NewChatForm","MessagesArea","Cable","ChatsList","Component","state","chats","activeChat","componentDidMount","fetch","then","res","json","setState","handleClick","id","handleReceivedChat","response","chat","handleReceivedMessage","message","find","chat_id","messages","deleteHandler","e","console","log","render","props","channel","length","mapChats","user","findActiveChat","map","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"../../Constants\";\nimport NewChatForm from \"./NewChatForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nclass ChatsList extends React.Component {\n  state = {\n    chats: [],\n    activeChat: null\n    // user: this.props.user\n  };\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/chats`)\n      .then(res => res.json())\n      .then(chats => this.setState({ chats }));\n  };\n\n  handleClick = id => {\n    this.setState({ activeChat: id });\n  };\n\n  handleReceivedChat = response => {\n    const { chat } = response;\n    this.setState({\n      chats: [...this.state.chats, chat]\n    });\n  };\n\n  handleReceivedMessage = response => {\n    const { message } = response;\n    const chats = [...this.state.chats];\n    const chat = chats.find(chat => chat.id === message.chat_id);\n    chat.messages = [...chat.messages, message];\n    this.setState({ chats });\n  };\n\n  deleteHandler = e => {\n    console.log(\"in handelr\", e);\n  };\n\n  render = () => {\n    const { chats, activeChat } = this.state;\n    console.log(\"oin chats list USER:\", this.props);\n    // -------------------so weird that line 43 classname and line 55 chats if same name then double results-----\n    return (\n      <div className=\"chattybox\">\n        <ActionCableConsumer\n          channel={{ channel: \"ChatsChannel\" }}\n          onReceived={this.handleReceivedChat}\n        />\n        {this.state.chats.length ? (\n          <Cable\n            chats={chats}\n            handleReceivedMessage={this.handleReceivedMessage}\n          />\n        ) : null}\n        <h2>Currently Available Chefs:</h2>\n        <ul>{mapChats(chats, this.handleClick, this.props.user)}</ul>\n\n        <NewChatForm user={this.props.user} />\n\n        {activeChat && this.props.user ? (\n          <MessagesArea\n            user={this.props.user}\n            chat={findActiveChat(chats, activeChat)}\n          />\n        ) : null}\n      </div>\n    );\n  };\n}\n\nexport default ChatsList;\n\n// helpers\n\nconst findActiveChat = (chats, activeChat) => {\n  return chats.find(chat => chat.id === activeChat);\n};\n\nconst mapChats = (chats, handleClick) => {\n  return chats.map(chat => {\n    return (\n      <li>\n        <button key={chat.id} onClick={() => handleClick(chat.id)}>\n          Chat Room: {chat.title}\n        </button>\n        <button onClick={this.deleteHandler}> Delete</button>\n      </li>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}